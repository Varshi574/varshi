   java 
   
   what is java?
   
      object oritend programming language
	  
   why pl?
      to develop the software/application
	  
	why are we developing the software(s)?
	
	1.problem solving
	2.efficiency and automation 
	3.innovation
	4.business growth
	5.customization
	6.data management
	7.connectivity and communication 
	
	
we have different programming languages 

   procedural oriented programming language
      object oriented programming langauge
   modula oriented programming languages
   scripting oriented programming languages
   
   

how can we say java is oopl?
 
    because it is following oops principles
	
	  oops principles  - OMG (object management group) - candain organization 
	  
	       inheritance
		   polymorpshim
		   abstraction 
		   encapsulation 
		   
		   
java -> was given by which organization?

        initially it was sunmicrosystem (scjp)
		now oracle (ocjp)
		1995
		author: james gosling
		url: www.oracle.com
		29 years ago 
		popularity
		java has its own characteristics/principles/buzzwards
		
		->13 features 
		
		java is simple
		
		2gb occupied memory
		
		2gb free memory -> resources
		
		
		
		  
		     -> garbage collector
			 
			    memory management will be taking care by garbage collector 
				
				as a programmer do we need to write any program?
				
				   now
				   
			 -> user friendly library
			 
			 
			 
			 
		java is platform independent
		
		       java - windows 
			           .class 
					   
					   byte code
					   
					   
			   unix -will it work ? 
			    we can 
				
		irrespective of any operating system we are using 
		we can write java program once, we can reuse or 
		run any where
		  java  slogan - wora
		  write once run anywhere 
		  
		  
	
when java released by james gosling in the year of 1995, he released 
this java into three editions

   ->jse(core java)-java standard edition 
   ->jee(advanced java)-java enterprise edition 
   ->jme-java micro/mobile edition 
   
   
   using core java, what we can develop?
   
in the market, we do have different types of applications ?

       ->desktop application-results are not sharable across the globe
	   
	   ex: calculator,acrobaticreader,antivirus etc.. 
	   
	   ->internet application -results are sharable across the globe
	   
	   ex: facebook,flipkart,amazon etc.. 
	   
	   
	  using jse, we can develop desktop applications

      using jee, we can develop both desktop + web applications

but if we really would like to learn jee, first we should learn jse 

because jee got implemented on top of jse..

jme ->we can develop 

significance of learning core java/jse:
```````````````````````````````````````
to develop desktop applicaitons
to learn advanced java
to learn high end technologies like salesforce,mulesoft,
pega,tableu,etc..
	  
   

structure of java program 
steps to follow to  write the java program
compilation vs execution 
variables 
datatypes 
methods 
examples....


structure of the java program:
``````````````````````````````

  every java program should starts with by defining the class. 
  
  this is the rule.
  
  without class, there is no java program.
  
  how can i define the class.
  
   as a programmer we have to follow some rules to define the program.
   those rules technically we can call it as syntaxes. 
   
   syntaxes are given by language vendor. 
   
   
   what happend if we don't follow the syntaxes?
   
    we will get compile time error.
	
	
how can we define the class
syntax to define the class

    class Wipro
    {

      public static void main(String[] args)
      {
              
      }
    }   

note:
every java program execution starts from main method only.

how main() looks like?

  main() is the predefined method 
  
  

note:
anything we want to define or declare that should be inside the class only. 



java is case sensitive programming language

all java reserved keywords must be in lower case only.


once you write the java program we have to save it by giving 
extension as .java 


 syntax: javac <filename>.java
 
 we can give both filename and class name as same or different
 
 
while we are executing we have to give classname 

command to execute the java program 

   syntax:
     java <classname>
	
	
	ex:
	
	  javac Tcs.java
	  
	  java Wipro
	  
.java file contains source code 	  
.class file contains byte code 

   ->not in human readable code
   ->who can read?
      jvm(java virtual machine)
	  jvm is the part of jdk
	  
to work or to develop any java program first we need to download

jdk software and make it install in your machines.

java is open source 

jvm will read this byte code and converts it into machine level code 

so that we can execute it and we can get the output. 

basic example(Helloworld program):

class Wipro
{
 public static void main(String[] args)
 {
    System.out.println("welcome to java-trainings in wipro");	 
 }
}


by default java commands could not recognizable by the operating system 
to make it recognize open the command prompt and give below command 

set path = "C:\Program Files\Java\jdk-21\bin";



java is object oriented programming language


to achieve those oops principles in java, we have two concepts are there

  1.class
  2.object
  
  
  class:

  class is the collection  of 

     -variables
     -methods 

variable:

   variables are the names refered to the memory location(s)

syntax:

     <datatype> <variablename> = <value>;

100

     int x=100;	 


rama

     String name  = "rama";
	 
	 
45.67

     float f = 45.67f;
	 
	
in java, what type of datatypes are available?


     prmitive 
	
	
	-integer -to store integer values
	     byte -1 byte - 8 bits
		 short-2 bytes
		 int   4 bytes
		 long  8 bytes
		 
	-character
	     char  - 2 bytes
		 
	-float 
	     float
		 double
	-boolean
	     boolean
		 
	 
every datatype has its own range and memory size.
	 
byte datatype
 
   -2 ^n-1 to 2 ^n-1 -1
   
   n - no.of bits
   
   -2^7 to 2^7 - 1
   
   -128 to 127
   
   short b = 128;
   int 
   long 
   
   int x = 120;//4 bytes 
   


example:
```````
class DataTypesDemo
{

   public static void main(String[] args)
   {
            //logic 
             byte b = 127;
			 System.out.println(b);
			 String name = "kiran";
			 System.out.println("student name is: "  + name);
			 
			 double marks1 = 98.876543212345678;
			 float marks2  = 98.876543212345678f;
			 
			 System.out.println("student marks double type:" + marks1);
			 System.out.println("student marks float type: " + marks2);
			 
			 char c = 'r';
			 System.out.println("character value is: " + c);
			 
			 boolean bool = false;
			 System.out.println("boolean value is: " + bool);
			 
   }

}


class is the collection of variables and methods 

variable - name of the memory location 
purpose: to store the data 

    datatypes 
	
method:

  method is the place where we are writing the logic. 
  to perform some operation based on the requirement. 

 syntax to define the method:

  [accessmodifier] <returntype> <methodname> ([parameters])
  {

     //logic 
  }  

define one method which displays helloworld?

   void display()
   {
     System.out.println("Helloworld");
   }
	
  void -> it means it won't return any value. 
  
 
define one method which returns helloworld?

   String display()
   {
     return "helloworld";
   }
   
   return type and return value must be compatible otherwise we will 
   get compiletime error. 
   
   
define one method which returns your salary?

   double getSalary()
   {
    return 7867.98;
   }

define one method which returns your grade?

   char getGrade()
   {
     return 'A';
   }

define one method which accepts two integer values and returns their sum?

    
   int getSum(int x, int y)
   {
    return x+y;
   }
	
define one method which accepts two integer values and displays their sum?

   void getSum(int x, int y)
   {
     System.out.println("the sum of given two no's is: " +(x+y));
   }
   
define one method which accepts firstname and lastname and returns their fullname?

   String getFullName(String firstName,String lastName)
   {
    return firstName+lastName;
	}
	
for the methods we have some naming convention 

 firstword first letter should be in lower case and rest of the words first 
 letters should be in upper case. 
   
      getGrade()
	  getStudentInfo()
	  getEmployeeData()
	  getAge()
	  
	  
while we are defining the classes there is one more naming convention 

for class/interface 
   
    -everyword first letter should be in uppercase
	
	class Welcome{}
	class EmployeeData{}
	interface ProductDetails{}
	

class 
   
   -variables 
   -methods
   
   
example:
```````
class Student
{
  //variables
  
  int stid = 100;
  String stname= "Rama";
  double stmarks=99.5;
  
  //display these values
  
  public void getStudentInfo()
  {
	  
	    System.out.println("student id is: " + stid);
		System.out.println("student name is: " + stname);
		System.out.println("student marks are: " + stmarks);
	  
  }

}
	

note:
inner method definition is not possible 
but inner method invocation is possible. 

   from one method we can call another method. 
   
   
example:
````````
class Student
{
  //variables
  
  static int stid = 100;
  static String stname= "Rama";
  static double stmarks=99.5;
  
  //display these values
  public static void getStudentInfo()
  {
	  //logic
	    System.out.println("student id is: " + stid);
		System.out.println("student name is: " + stname);
		System.out.println("student marks are: " + stmarks);
	  
	  
  }
  public static void main(String[] args){
	  //logic 
	  //call getStudentInfo()
	  getStudentInfo();
	  
	  
  }

}


 to implement oops principles in java, we are using two concepts
    -class 
	-object 
	

object: instance of the class is known as object 

 	
	instance: alloating the memory for variables which we are declaring inside 
	the class. 
	
	when memory will be created?
	
	   when you create the object.
	   
	   
	 when we define the class, memory will be created or not? 
	 no
	 
	 
syntax to create the object:

    <classname> <objectname> = new <classname>();
	
	ex:

     Student obj = new Student();

    Student -> name of the class 

    obj -> name of the objec tableu 
   
     = -> assignment operator

     new -> dynamic memory allocation operator (keyword)

  	Student() -> constructor 


	
example for creating the object :
`````````````````````````````````
class Student
{
  //variables
  
   int stid = 100;
   String stname= "Rama";
   double stmarks=99.5;
  
  //display these values
  public  void getStudentInfo()
  {
	  //logic
	    System.out.println("student id is: " + stid);
		System.out.println("student name is: " + stname);
		System.out.println("student marks are: " + stmarks);
	  
	  
  }
  public static void main(String[] args){
	
	  //create the object
	  Student obj = new Student();
	  System.out.println("student id is : " + obj.stid);
	  System.out.println("student name is:" + obj.stname);
	  System.out.println("student marks are: " + obj.stmarks);
	  
	  System.out.println("==================================");
	  
	  //call the method using object
	  
	  obj.getStudentInfo();
	  
	  System.out.println("==================================");
	  Student obj1 = new Student();
	  obj1.getStudentInfo();
	  
	  System.out.println(obj==obj1);
	  
  }

}
	
	 
	 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	  
   